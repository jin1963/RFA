let web3, account, contract, usdt;

const contractAddress = "0xC444F117806B725E12154Fa7D0cd090Eec325B48";
const usdtAddress = "0x55d398326f99059fF775485246999027B3197955";

// ‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà force switch
async function connectWallet() {
  if (window.ethereum) {
    web3 = new Web3(window.ethereum);
    try {
      await ethereum.request({ method: "eth_requestAccounts" });
      const accounts = await web3.eth.getAccounts();
      account = accounts[0];

      contract = new web3.eth.Contract(contractABI, contractAddress);
      usdt = new web3.eth.Contract(usdtABI, usdtAddress);

      document.getElementById("walletAddress").innerText = "‚úÖ " + account;
      document.getElementById("refSection").style.display = "block";
      document.getElementById("refLink").value = window.location.origin + window.location.pathname + "?ref=" + account;
    } catch (err) {
      alert("‚ùå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    }
  } else {
    alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á MetaMask ‡∏´‡∏£‡∏∑‡∏≠ Bitget Wallet");
  }
}

// ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ú‡∏¥‡∏î chain
async function ensureOnBSC() {
  const chainId = await web3.eth.getChainId();
  if (chainId !== 56) {
    alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô BNB Smart Chain ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£");
    return false;
  }
  return true;
}

// ‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
async function copyRefLink() {
  const refInput = document.getElementById("refLink");
  refInput.select();
  document.execCommand("copy");
  alert("üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÅ‡∏•‡πâ‡∏ß!");
}

// ‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£ Referrer (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏ô BSC)
async function registerReferrer() {
  if (!(await ensureOnBSC())) return;

  const ref = document.getElementById("refInput").value;
  if (!ref || ref.toLowerCase() === account.toLowerCase()) {
    document.getElementById("status").innerText = "‚ùå ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ";
    return;
  }

  try {
    await contract.methods.registerReferrer(ref).send({ from: account });
    document.getElementById("status").innerText = "‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£ Referrer ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
  } catch (e) {
    document.getElementById("status").innerText = "‚ùå ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + e.message;
  }
}

// ‚úÖ ‡∏ã‡∏∑‡πâ‡∏≠ KJC (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏ô BSC)
async function purchase() {
  if (!(await ensureOnBSC())) return;

  const amount = document.getElementById("usdtAmount").value;
  if (!amount || amount <= 0) {
    alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô USDT");
    return;
  }

  const usdtAmount = web3.utils.toWei(amount, "mwei"); // USDT ‡πÉ‡∏ä‡πâ 6 decimals

  try {
    const balance = await usdt.methods.balanceOf(account).call();
    if (Number(balance) < Number(usdtAmount)) {
      document.getElementById("status").innerText = "‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ USDT ‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠";
      return;
    }

    document.getElementById("status").innerText = "‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ USDT...";
    await usdt.methods.approve(contractAddress, usdtAmount).send({ from: account });

    document.getElementById("status").innerText = "‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡∏∑‡πâ‡∏≠ KJC...";
    await contract.methods.buyWithReferral(usdtAmount).send({ from: account });

    document.getElementById("status").innerText = "‚úÖ ‡∏ã‡∏∑‡πâ‡∏≠ KJC ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
  } catch (e) {
    document.getElementById("status").innerText = "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + e.message;
  }
}
