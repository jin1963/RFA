let web3;
let account;
let stakingContract;

async function connectWallet() {
  if (window.ethereum) {
    web3 = new Web3(window.ethereum);
    try {
      await window.ethereum.request({ method: 'eth_requestAccounts' });
      const accounts = await web3.eth.getAccounts();
      account = accounts[0];

      document.getElementById("walletAddress").innerText = `‚úÖ ${account}`;
      stakingContract = new web3.eth.Contract(stakingABI, contractAddress);

      loadStakingInfo();
    } catch (error) {
      console.error("‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error);
    }
  } else {
    alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á MetaMask ‡∏´‡∏£‡∏∑‡∏≠ Bitget Wallet");
  }
}

async function loadStakingInfo() {
  if (!stakingContract || !account) return;
  try {
    const stake = await stakingContract.methods.stakes(account).call(); // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏≤‡∏Å contract
    const amount = web3.utils.fromWei(stake.amount, 'ether');
    document.getElementById("stakeAmount").innerText = `${amount} KJC`;
  } catch (e) {
    document.getElementById("stakeAmount").innerText = "‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
    console.error(e);
  }
}

async function claimReward() {
  if (!stakingContract || !account) {
    document.getElementById("claimStatus").innerText = "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏Å‡πà‡∏≠‡∏ô";
    return;
  }

  try {
    const last = await stakingContract.methods.lastClaimed(account).call();
    const interval = await stakingContract.methods.CLAIM_INTERVAL().call();
    const now = Math.floor(Date.now() / 1000);

    if (now >= parseInt(last) + parseInt(interval)) {
      await stakingContract.methods.claimStakingReward().send({ from: account });
      document.getElementById("claimStatus").innerText = "üéâ ‡πÄ‡∏Ñ‡∏•‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!";
      loadStakingInfo();
    } else {
      const wait = Math.ceil((parseInt(last) + parseInt(interval) - now) / 60);
      document.getElementById("claimStatus").innerText = `‚è≥ ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏≠‡∏µ‡∏Å ${wait} ‡∏ô‡∏≤‡∏ó‡∏µ`;
    }
  } catch (e) {
    document.getElementById("claimStatus").innerText = "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏°";
    console.error(e);
  }
}

// ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏° copyRefLink ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢
function copyRefLink() {
  const input = document.getElementById("refLink");
  input.select();
  input.setSelectionRange(0, 99999); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠
  navigator.clipboard.writeText(input.value);
  alert("‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏•‡πâ‡∏ß!");
}
